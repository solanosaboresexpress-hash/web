{"version":3,"file":"static/js/388.4063dd74.chunk.js","mappings":"4KAsBA,YAnBA,MACE,sBAAMA,CAAiBC,EAAQC,GAC7B,IACE,MAAMC,GAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,sBACrBC,EAAK,GAAAC,OAAMN,EAAM,KAAAM,OAAIC,KAAKN,EAAaO,UAAUC,MAAM,EAAG,KAOhE,aANMC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIT,EAAKG,GAAQ,CAC5BL,SACAQ,SAAUP,EAAaO,SACvBI,KAAMX,EAAaW,KACnBC,UAAWC,KAAKC,QAEX,CAAEC,SAAS,EAAMC,GAAIZ,EAC9B,CAAE,MAAOa,GAEP,OADAC,QAAQD,MAAM,uCAAqCA,GAC5C,CAAEF,SAAS,EAAOE,MAAOA,EAAME,QACxC,CACF,E","sources":["repositories/PushSubscriptionRepository.js"],"sourcesContent":["import { db } from '../services/firebase';\r\nimport { collection, doc, setDoc } from 'firebase/firestore';\r\n\r\nclass PushSubscriptionRepository {\r\n  async saveSubscription(userId, subscription) {\r\n    try {\r\n      const col = collection(db, 'push_subscriptions');\r\n      const subId = `${userId}_${btoa(subscription.endpoint).slice(0, 20)}`;\r\n      await setDoc(doc(col, subId), {\r\n        userId,\r\n        endpoint: subscription.endpoint,\r\n        keys: subscription.keys,\r\n        createdAt: Date.now(),\r\n      });\r\n      return { success: true, id: subId };\r\n    } catch (error) {\r\n      console.error('Error guardando suscripci√≥n push:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new PushSubscriptionRepository();\r\n\r\n\r\n"],"names":["saveSubscription","userId","subscription","col","collection","db","subId","concat","btoa","endpoint","slice","setDoc","doc","keys","createdAt","Date","now","success","id","error","console","message"],"sourceRoot":""}